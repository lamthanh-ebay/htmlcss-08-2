/* ******************* Grid System ******************* */
@use "sass:math";
@use "sass:map";

/********** Grid System **********/
$grid-breakpoints: (
    xxl: 1400px,
    xl: 1200px,
    lg: 992px,
    md: 768px,
    sm: 576px,
);
$container-max-widths: (
    sm: 100%,
    md: 540px,
    lg: 720px,
    xl: 960px,
    xxl: 1140px,
);

$grid-column: 12;
$grid-gutter-width: 30px;

$gutters: (
    0: 0,
    1: 0.25,
    2: 0.5,
    3: 1,
    4: 1.5,
    5: 3,
);

%gutter-padding {
    padding-left: calc(var(--grid-gutter-x) * 0.5);
    padding-right: calc(var(--grid-gutter-x) * 0.5);
}

.container-fluid {
    --grid-gutter-x: #{$grid-gutter-width};
    --grid-gutter-y: #{$grid-gutter-width};

    width: 100%;
    margin-left: auto;
    margin-right: auto;
    @extend %gutter-padding;
}

.container {
    @extend .container-fluid;
    width: 1370px;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-top: calc(-1 * var(--grid-gutter-y));
    margin-left: calc(-1 * var(--grid-gutter-x) * 0.5);
    margin-right: calc(-1 * var(--grid-gutter-x) * 0.5);

    > * {
        @extend %gutter-padding;
        margin-top: var(--grid-gutter-y);
    }
}

.col {
    flex: 1 0;
}

// Mixin:
@mixin make-media-query($dimension) {
    @media screen and (max-width: ($dimension - 0.02px)) {
        @content;
    }
}

@mixin make-col-($infix: null) {
    @for $i from 1 through $grid-column {
        .col#{$infix}-#{$i} {
            flex: 0 0 auto;
            width: math.div(100%, $grid-column) * $i;
        }
    }
}

@mixin make-row-col-($infix: null) {
    @for $i from 1 through $grid-column {
        .row-col#{$infix}-#{$i} > * {
            flex: 0 0 auto;
            width: math.div(100%, $i);
        }
    }
}

@mixin make-offset($infix: null) {
    @for $i from 0 to $grid-column {
        .offset#{$infix}-#{$i} {
            margin-left: if($i == 0, 0, math.div(100%, $grid-column) * $i);
        }
    }
}

@mixin make-gutter($infix: null) {
    @each $i, $ratio in $gutters {
        .g#{$infix}-#{$i},
        .gx#{$infix}-#{$i} {
            --grid-gutter-x: #{$grid-gutter-width * $ratio};
        }
        .g#{$infix}-#{$i},
        .gy#{$infix}-#{$i} {
            --grid-gutter-y: #{$grid-gutter-width * $ratio};
        }
    }
}

@include make-row-col-();
@include make-col-();
@include make-offset();
@include make-gutter();

// Vòng lặp chạy qua tất cả các Breakpoint:
@each $break-point, $dimension in $grid-breakpoints {
    $max-width: map.get($container-max-widths, $break-point);
    $infix: "-#{$break-point}";

    @include make-media-query($dimension) {
        .container {
            max-width: $max-width;
        }

        @include make-row-col-($infix);
        @include make-col-($infix);
        @include make-offset($infix);
        @include make-gutter($infix);
    }
}
